{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/d3-axis/d3-axis.component.ts","./src/app/d3-axis/d3-axis.component.html","./src/app/d3-bar-chart-controls/d3-bar-chart-controls.component.ts","./src/app/d3-bar-chart-controls/d3-bar-chart-controls.component.html","./src/app/d3-bar-chart/d3-bar-chart.component.ts","./src/app/d3-bar-chart/d3-bar-chart.component.html","./src/app/d3-data-binding/d3-data-binding.component.ts","./src/app/d3-data-binding/d3-data-binding.component.html","./src/app/d3-scales/d3-scales.component.ts","./src/app/d3-scales/d3-scales.component.html","./src/app/d3-selecting/d3-selecting.component.ts","./src/app/d3-selecting/d3-selecting.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/highlight.service.ts","./src/app/navigation/navigation.component.ts","./src/app/navigation/navigation.component.html","./src/app/performance.service.ts","./src/app/resources/resources.component.ts","./src/app/resources/resources.component.html","./src/app/svg-shapes/svg-shapes.component.ts","./src/app/svg-shapes/svg-shapes.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable, NgModule } from '@angular/core';\nimport { Routes, RouterModule, Resolve } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { SvgShapesComponent } from './svg-shapes/svg-shapes.component';\nimport { ResourcesComponent } from './resources/resources.component';\n\nimport { delay } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\nimport { D3SelectingComponent } from './d3-selecting/d3-selecting.component';\nimport { D3DataBindingComponent } from './d3-data-binding/d3-data-binding.component';\nimport { D3ScalesComponent } from './d3-scales/d3-scales.component';\nimport { D3BarChartComponent } from './d3-bar-chart/d3-bar-chart.component';\nimport { D3BarChartControlsComponent } from './d3-bar-chart-controls/d3-bar-chart-controls.component';\nimport { D3AxisComponent } from './d3-axis/d3-axis.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MyResolver implements Resolve<Observable<string>> {\n  resolve(): Observable<string> {\n    performance.mark('resolved-data-start');\n    return of('Resolved Data').pipe(delay(500));\n  }\n}\n\nconst routes: Routes = [\n  {\n    path: 'dashboard', component: DashboardComponent,\n  },\n  {\n    path: 'svg-shapes', component: SvgShapesComponent\n  },\n  {\n    path: 'd3-selecting', component: D3SelectingComponent\n  },\n  {\n    path: 'd3-data-binding', component: D3DataBindingComponent\n  },\n  {\n    path: 'd3-scales', component: D3ScalesComponent\n  },\n  {\n    path: 'd3-axis', component: D3AxisComponent\n  },\n  {\n    path: 'd3-bar-chart', component: D3BarChartComponent\n  },\n  {\n    path: 'd3-bar-chart-controls', component: D3BarChartControlsComponent\n  },\n  {\n    path: 'resources', component: ResourcesComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, ViewEncapsulation } from '@angular/core';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Measuring Web Application Performance - @tomeustace';\n\n  ngOnInit() {\n    performance.mark('start');\n    for (let i = 0; i < 100; i++) {\n      // console.log(\"i: \", i);\n    }\n    performance.mark('stop');\n    performance.measure('my-measure', 'start', 'stop');\n  }\n}\n","\n<app-navigation></app-navigation>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavigationComponent } from './navigation/navigation.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { SvgShapesComponent } from './svg-shapes/svg-shapes.component';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { HighlightService } from './highlight.service';\nimport { PerformanceService } from './performance.service';\nimport { D3SelectingComponent } from './d3-selecting/d3-selecting.component';\nimport { D3DataBindingComponent } from './d3-data-binding/d3-data-binding.component';\nimport { ResourcesComponent } from './resources/resources.component';\nimport { D3ScalesComponent } from './d3-scales/d3-scales.component';\nimport { D3BarChartComponent } from './d3-bar-chart/d3-bar-chart.component';\nimport { D3BarChartControlsComponent } from './d3-bar-chart-controls/d3-bar-chart-controls.component';\nimport { D3AxisComponent } from './d3-axis/d3-axis.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavigationComponent,\n    DashboardComponent,\n    SvgShapesComponent,\n    D3DataBindingComponent,\n    D3SelectingComponent,\n    ResourcesComponent,\n    D3ScalesComponent,\n    D3BarChartComponent,\n    D3BarChartControlsComponent,\n    D3AxisComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatButtonModule\n  ],\n  providers: [HighlightService, PerformanceService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { scaleOrdinal, scaleLinear, scaleTime } from 'd3-scale';\nimport { select, selectAll } from 'd3-selection';\nimport { axisLeft, axisRight, axisTop, axisBottom } from 'd3-axis';\nimport { HighlightService } from '../highlight.service';\n\n@Component({\n  selector: 'app-d3-axis',\n  templateUrl: './d3-axis.component.html',\n  styleUrls: ['./d3-axis.component.scss']\n})\nexport class D3AxisComponent implements OnInit {\n\n  constructor(private highlightService: HighlightService) { }\n\n  ngOnInit(): void {\n    const linearVertical = scaleLinear()\n        .domain([0, 500])\n        .range([0, 200]);\n\n    const linearHorizontal = scaleLinear()\n        .domain([0, 500])\n        .range([0, 250]);\n\n\n    const left = axisLeft(linearVertical);\n    left.ticks(3);\n    select(\"#axis-left-right\")\n      .append(\"g\")\n      .attr(\"transform\", \"translate(35,30)\")\n      .call(left);\n\n    const right = axisRight(linearVertical);\n    right.ticks(4);\n    select(\"#axis-left-right\")\n      .append(\"g\")\n      .attr(\"transform\", \"translate(250,30)\")\n      .call(right);\n\n    const top = axisTop(linearHorizontal);\n    select(\"#axis-top-bottom\")\n      .append(\"g\")\n      .attr(\"transform\", \"translate(10,50)\")\n      .call(top);\n\n    const bottom = axisBottom(linearHorizontal);\n    select(\"#axis-top-bottom\")\n      .append(\"g\")\n      .attr(\"transform\", \"translate(10,70)\")\n      .call(bottom);\n\n\n    const datesLeft = [new Date(2022, 0, 1), new Date(2022, 0, 7)];\n    const timeScaleLeft = scaleTime()\n      .domain(datesLeft)\n      .range([0, 200]);\n\n    const timeAxisLeft = axisLeft(timeScaleLeft);\n    select(\"#time-axis\")\n      .append(\"g\")\n      .attr(\"transform\", \"translate(100,70)\")\n      .call(timeAxisLeft);\n\n    const dates = [new Date(2021, 0, 1), new Date(2022, 0, 1)];\n    const timeScaleRight = scaleTime()\n      .domain(dates)\n      .range([0, 200]);\n\n    const timeAxisRight = axisRight(timeScaleRight);\n    select(\"#time-axis\")\n      .append(\"g\")\n      .attr(\"transform\", \"translate(150,70)\")\n      .call(timeAxisRight);\n  }\n\n  ngAfterViewInit(): void {\n    this.highlightService.highlightAll();\n  }\n}\n","<div class=\"grid-container\" id=\"grid\">\n  <mat-grid-list cols=\"3\" rowHeight=\"450px\">\n    <mat-grid-tile colspan=\"1\" rowspan=\"2\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            Y Axis (left and right)\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n          <pre>\n<code class=\"language-js\">const linearVertical = scaleLinear()\n.domain([0, 500])\n.range([0, 200]);\n\nconst left = axisLeft(linearVertical);\nleft.ticks(3);\nselect(\"#axis-left-right\")\n  .append(\"g\")\n  .attr(\"transform\", \"translate(35,30)\")\n  .call(left);\n\nconst right = axisRight(linearVertical);\nright.ticks(4);\nselect(\"#axis-left-right\")\n  .append(\"g\")\n  .attr(\"transform\", \"translate(250,30)\")\n  .call(right);\n</code></pre>\n        <svg width=\"300\" height=\"350\" id=\"axis-left-right\"></svg>\n\n        </mat-card-content>\n        <mat-card-content class=\"dashboard-card-content\">\n          <div class=\"scale-linear\"></div>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n\n    <mat-grid-tile colspan=\"1\" rowspan=\"2\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            X Axis (top and bottom)\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n          <pre><code class=\"language-js\">const linearHorizontal = scaleLinear()\n.domain([0, 500])\n.range([0, 250]);\n\nconst top = axisTop(linearHorizontal);\nselect(\"#axis-top-bottom\")\n  .append(\"g\")\n  .attr(\"transform\", \"translate(10,20)\")\n  .call(top);\n\nconst bottom = axisBottom(linearHorizontal);\nselect(\"#axis-top-bottom\")\n  .append(\"g\")\n  .attr(\"transform\", \"translate(10,50)\")\n  .call(bottom);\n</code></pre>\n          <svg width=\"300\" height=\"400\" id=\"axis-top-bottom\"></svg>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n\n    <mat-grid-tile colspan=\"1\" rowspan=\"2\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            Axis Time\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n          <pre><code class=\"language-js\">const datesLeft = [new Date(2022, 0, 1), new Date(2022, 0, 7)];\nconst timeScaleLeft = scaleTime()\n  .domain(datesLeft)\n  .range([0, 300]);\n\nconst timeAxisLeft = axisLeft(timeScaleLeft);\nselect(\"#time-axis\")\n  .append(\"g\")\n  .attr(\"transform\", \"translate(100,70)\")\n  .call(timeAxisLeft);\n\nconst dates = [new Date(2021, 0, 1), new Date(2022, 0, 1)];\nconst timeScaleRight = scaleTime()\n  .domain(dates)\n  .range([0, 300]);\n\nconst timeAxisRight = axisRight(timeScaleRight);\nselect(\"#time-axis\")\n  .append(\"g\")\n  .attr(\"transform\", \"translate(150,70)\")\n  .call(timeAxisRight);\n</code></pre>\n          <svg width=\"350\" height=\"300\" id=\"time-axis\"></svg>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n  </mat-grid-list>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { select, selectAll } from 'd3-selection';\nimport { axisLeft, axisBottom } from 'd3-axis';\nimport { scaleLinear, scaleBand } from 'd3-scale';\nimport transition from 'd3-transition';\nimport * as d3 from 'd3';\nimport { HighlightService } from '../highlight.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n@Component({\n  selector: 'app-d3-bar-chart-controls',\n  templateUrl: './d3-bar-chart-controls.component.html',\n  styleUrls: ['./d3-bar-chart-controls.component.scss']\n})\nexport class D3BarChartControlsComponent implements OnInit {\n\n  height = 200;\n  width = 700;\n  rotated = false;\n  data;\n\n  constructor(private highlightService: HighlightService, private httpClient: HttpClient) { }\n\n  ngOnInit(): void {\n    this.drawChart();\n  }\n\n  getUserData(): Observable<any> {\n    const url = 'https://api.github.com/search/users?';\n    const queryUrl = `${url}q=bob&per_page=20`;\n    return this.httpClient.get(queryUrl)\n  }\n\n  drawChart(sorted?: boolean) {\n    select(\"#bar-chart-1\").attr(\"transform\", \"\");\n    select(\"#bar-chart-1\").selectAll(\"g\").remove();\n    select(\"#bar-chart-1\").selectAll(\"rect\").remove();\n    this.getUserData().subscribe((data) => {\n      data = data.items;\n      if (sorted) {\n        data = data.sort(function(a, b) {\n            return a.id - b.id;\n        });\n      }\n\n      const x = scaleBand()\n        .domain(data.map(d => d.login))\n        .range([0, this.width])\n        .padding(0.2);\n\n      const y = scaleLinear()\n        .domain([100, 0])\n        .range([this.height, 0]);\n\n      select(\"#bar-chart-1\")\n        .append(\"g\")\n        .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n        .call(axisBottom(x))\n        .selectAll(\"text\")\n        .style(\"text-anchor\", \"end\")\n        .attr(\"dx\", \"-.8em\")\n        .attr(\"dy\", \".15em\")\n        .attr(\"transform\", \"rotate(-65)\");\n\n      select('#bar-chart-1')\n        .selectAll('rect')\n        .data(data)\n        .enter()\n        .append('rect')\n            .attr(\"x\", (d) => x(d.login))\n            .attr(\"width\", x.bandwidth())\n            .attr(\"y\", (d) => { return this.height - y(d.id/10000); })\n            .attr(\"height\", (d) => y(d.id/10000))\n            .attr(\"fill\", \"steelblue\");\n\n      });\n  }\n\n  greaterThan(num) {\n    selectAll('#bar-chart-1 > rect').filter(function() {\n      const rects = selectAll('g > rect');\n      console.log(\"selectAll('g > rect')\", select(this).data());\n      return (select(this).data()[0].id / 10000) > num;\n    }).style('fill', 'green');\n  }\n\n  lessThan(num) {\n    selectAll('#bar-chart-1 > rect').filter(function() {\n      const rects = selectAll('g > rect');\n      console.log(\"selectAll('g > rect')\", select(this).data());\n      return (select(this).data()[0].id / 10000) < num;\n    }).style('fill', 'purple');\n  }\n\n  rotate() {\n    this.rotated = !this.rotated;\n    selectAll('#bar-chart-1')\n      .transition()\n      .duration(1000)\n      .attr('transform', () => {\n        if (this.rotated) {\n          return 'scale(1), translate(0, 0), rotate(180)';\n        } else {\n          return 'scale(1), translate(0, 0), rotate(0)';\n        }\n      });\n  }\n\n  wiggle() {\n    this.rotated = !this.rotated;\n    selectAll('#bar-chart-1')\n      .transition()\n      .duration(500)\n      .attr('transform', 'translate(100, 0)')\n      .transition()\n      .duration(500)\n      .attr('transform', 'translate(0, 0)')\n      .transition()\n      .duration(500)\n      .attr('transform', 'translate(100, 0)')\n      .transition()\n      .duration(500)\n      .attr('transform', 'translate(0, 0)');\n  }\n\n  zoomChart() {\n    select(\"svg\").call(d3.zoom().on(\"zoom\", function (event) {\n       select(this).attr(\"transform\", event.transform)\n    }))\n  }\n\n  empty() {\n    selectAll('#bar-chart-1')\n      .selectAll('rect')\n      .transition()\n      .duration(1000)\n      .attr('y', 0)\n      .attr('height', 0);\n  }\n\n  ngAfterViewInit(): void {\n    this.highlightService.highlightAll();\n  }\n\n}\n","<div class=\"grid-container\" id=\"grid\">\n  <mat-grid-list cols=\"1\" rowHeight=\"450px\">\n    <mat-grid-tile colspan=\"1\" rowspan=\"1\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            Bar Chart\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n        </mat-card-content>\n        <mat-card-content class=\"dashboard-card-content\">\n          <svg id=\"bar-chart-1\" width=\"800\" height=\"300\"></svg>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n\n    <mat-grid-tile colspan=\"1\" rowspan=\"1\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            Bar Chart Controls\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n          <button mat-raised-button (click)=\"drawChart()\">Redraw</button>\n          <button mat-raised-button (click)=\"greaterThan(50)\">> 50</button>\n          <button mat-raised-button (click)=\"lessThan(50)\">< 50</button>\n          <button mat-raised-button (click)=\"rotate()\">Rotate</button>\n          <button mat-raised-button (click)=\"wiggle()\">Wiggle</button>\n          <button mat-raised-button (click)=\"empty()\">Empty</button>\n          <button mat-raised-button (click)=\"zoomChart()\">Enable Zoom</button>\n          <button mat-raised-button (click)=\"drawChart(true)\">Sort</button>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n\n  </mat-grid-list>\n</div>\n","import { Component, NgZone, OnInit } from '@angular/core';\nimport { select, selectAll } from 'd3-selection';\nimport { axisLeft, axisBottom } from 'd3-axis';\nimport { scaleLinear, scaleBand } from 'd3-scale';\nimport transition from 'd3-transition';\nimport * as d3 from 'd3';\nimport { HighlightService } from '../highlight.service';\n@Component({\n  selector: 'app-d3-bar-chart',\n  templateUrl: './d3-bar-chart.component.html',\n  styleUrls: ['./d3-bar-chart.component.scss']\n})\nexport class D3BarChartComponent implements OnInit {\n\n  height = 200;\n  width = 300;\n  data = [{name: \"paul\", age: 35},{name: \"sue\", age: 80}, {name: \"fred\", age: 10}, {name: \"alice\", age: 50}, {name: \"bob\", age: 90}, {name: \"jane\", age: 30}, {name: \"john\", age: 40}];\n\n  x = scaleBand()\n    .domain(this.data.map(d => d.name))\n    .range([0, this.width])\n    .padding(0.2);\n\n  y = scaleLinear()\n    .domain([100, 0])\n    .range([this.height, 0]);\n\n  constructor(\n    private zone: NgZone,\n    private highlightService: HighlightService\n    ) { }\n\n  ngOnInit(): void {\n    select(\"#bar-chart-1\")\n      .append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n      .call(axisBottom(this.x));\n\n    select('#bar-chart-1')\n      .selectAll('rect')\n      .data(this.data)\n      .enter()\n      .append('rect')\n          .attr(\"x\", (d) =>this.x(d.name))\n          .attr(\"width\", this.x.bandwidth())\n          .attr(\"y\", (d) => { return this.height - this.y(d.age); })\n          .attr(\"height\", (d) => this.y(d.age))\n          .attr(\"fill\", \"steelblue\");\n\n          this.drawBar2();\n          this.zone.runOutsideAngular(() => {\n            this.drawBar3();\n          });\n  }\n\n  ngAfterViewInit(): void {\n    this.highlightService.highlightAll();\n  }\n\n  drawBar2() {\n    select(\"#bar-chart-2\").selectAll(\"rect\").remove();\n    select(\"#bar-chart-2\")\n      .append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n      .call(axisBottom(this.x));\n\n    select('#bar-chart-2')\n      .selectAll('rect')\n      .data(this.data)\n      .join('rect')\n          .attr(\"x\", (d) => this.x(d.name))\n          .attr(\"width\", this.x.bandwidth())\n          .attr(\"y\", (d) => { return this.height - this.y(d.age); })\n          .attr(\"height\", (d) => this.y(d.age))\n          .attr(\"fill\", \"steelblue\")\n          .on(\"mouseover\", function(d) {\n            select(this).transition().duration(500).attr(\"fill\", \"red\");\n          })\n          .on(\"mouseout\", function(d) {\n            select(this).attr(\"fill\", \"green\");\n          })\n          .on(\"click\", function(d) {\n            d3.select(this).transition().duration(1000).attr(\"height\", 0).attr(\"y\", 200);\n          });\n\n  }\n  drawBar3() {\n    const margin = {top: 20, right: 20, bottom: 30, left: 40};\n    select(\"#bar-chart-3\").selectAll(\"rect\").remove();\n    select(\"#bar-chart-3\")\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + this.height + \")\")\n      .call(axisBottom(this.x));\n\n    // select(\"#bar-chart-3\")\n    //   .append(\"g\")\n    //   .attr(\"transform\", \"translate(\" + margin.left + \",0)\")\n    //   .call(axisLeft(this.y));\n\n    const barGroup = select('#bar-chart-3')\n      .selectAll('rect')\n      .data(this.data)\n      .enter()\n      .append('g');\n\n    barGroup\n      .append('rect')\n          .attr(\"x\", (d) => this.x(d.name) + margin.left)\n          .attr(\"width\", this.x.bandwidth())\n          .attr(\"y\", (d) => { return this.height - this.y(d.age); })\n          .attr(\"height\", (d) => this.y(d.age))\n          .attr(\"fill\", \"steelblue\")\n          .on(\"mouseover\", function(d) {\n            select(this).transition().duration(500).attr(\"fill\", \"red\");\n          })\n          .on(\"mouseout\", function(d) {\n            select(this).attr(\"fill\", \"green\");\n          });\n\n      barGroup\n          .append('text')\n            .text((d) => d.age)\n            .attr(\"fill\", \"white\")\n            .attr(\"x\", (d) => this.x(d.name) + margin.left + (this.x.bandwidth()/3))\n            .attr(\"y\", (d) => { return this.height - this.y(d.age) + 15; })\n\n  }\n}\n","<div class=\"grid-container\" id=\"grid\">\n  <mat-grid-list cols=\"3\" rowHeight=\"450px\">\n    <mat-grid-tile colspan=\"1\" rowspan=\"2\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            Bar Chart\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n          <pre>\n<code class=\"language-js\">data = [{{\"{\"}}name: \"paul\", age: 35{{\"}\"}}, {{\"{\"}}name: \"sue\", age: 80{{\"}\"}},...];\nconst x = scaleBand()\n  .domain(this.data.map(d => d.name))\n  .range([0, this.width])\n  .padding(0.2);\n\nconst y = scaleLinear()\n  .domain([this.height, 0])\n  .range([0, this.height]);\n\nselect(\"#bar-chart\")\n  .append(\"g\")\n  .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n  .call(axisBottom(x));\n\nselect('#bar-chart')\n  .selectAll('rect')\n  .data(this.data)\n  .join('rect')\n      .attr(\"x\", (d) => x(d.name))\n      .attr(\"width\", x.bandwidth())\n      .attr(\"y\", (d) => this.height- y(d.age))\n      .attr(\"height\", (d) => +y(d.age))\n      .attr(\"fill\", \"steelblue\");\n</code></pre>\n        </mat-card-content>\n        <mat-card-content class=\"dashboard-card-content\">\n          <svg id=\"bar-chart-1\" width=\"500\" height=\"300\"></svg>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n\n    <mat-grid-tile colspan=\"1\" rowspan=\"2\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            Bar Chart Mouse Events\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n          <pre><code class=\"language-js\">select('#bar-chart-2')\n  .selectAll('rect')\n  .data(this.data)\n  .join('rect')\n      .attr(\"x\", (d) => x(d.name))\n      .attr(\"width\", x.bandwidth())\n      .attr(\"y\", (d) => this.height - y(d.age))\n      .attr(\"height\", (d) => y(d.age))\n      .attr(\"fill\", \"steelblue\")\n      .on(\"mouseover\", function(d) {{ \"{\" }}\n        select(this).attr(\"fill\", \"red\");\n      {{ \"}\"}})\n      .on(\"mouseout\", function(d) {{ \"{\" }}\n        select(this).attr(\"fill\", \"green\");\n      {{ \"}\"}});\n      .on(\"click\", function(d) {{ \"{\" }}\n        d3.select(this)\n          .transition()\n          .duration(1000)\n          .attr(\"height\", 0)\n          .attr(\"y\", 200);\n      {{ \"}\"}});\n</code></pre>\n          <button mat-raised-button (click)=\"drawBar2()\">Redraw</button>\n          <svg id=\"bar-chart-2\" width=\"500\" height=\"300\" ></svg>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n\n    <mat-grid-tile colspan=\"1\" rowspan=\"2\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            Bar Chart Group Element\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n          <pre><code class=\"language-js\">const barGroup = select('#bar-chart-3')\n  .selectAll('rect')\n  .data(this.data)\n  .enter()\n  .append('g');\n\nbarGroup\n  .append('rect')\n    .attr(\"x\", (d) => this.x(d.name) + margin.left)\n    .attr(\"width\", this.x.bandwidth())\n    .attr(\"y\", (d) => this.height - this.y(d.age))\n    .attr(\"height\", (d) => this.y(d.age))\n    .attr(\"fill\", \"steelblue\");\nbarGroup\n  .append('text')\n    .text((d) => d.age)\n    .attr(\"fill\", \"white\")\n    .attr(\"x\", (d) => this.x(d.name) + margin.left + (this.x.bandwidth()/3))\n    .attr(\"y\", (d) => this.height - this.y(d.age) + 15)\n</code></pre>\n          <svg id=\"bar-chart-3\" width=\"500\" height=\"300\" ></svg>\n          <p>profile - runOutsideAngular</p>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n  </mat-grid-list>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HighlightService } from '../highlight.service';\nimport { selectAll, select } from 'd3-selection';\n\n@Component({\n  selector: 'app-d3-data-binding',\n  templateUrl: './d3-data-binding.component.html',\n  styleUrls: ['./d3-data-binding.component.scss']\n})\nexport class D3DataBindingComponent implements OnInit {\n\n  kitties = [\n    {\n      name: 'Mittens',\n      age: 1,\n      breed: 'tabby',\n      color: 'gray'\n    },\n    {\n      name: 'Fluffy',\n      age: 3,\n      breed: 'persian',\n      color: 'orange'\n    },\n    {\n      name: 'Spike',\n      age: 5,\n      breed: 'siamese',\n      color: 'black'\n    },\n    {\n      name: 'Bob',\n      age: 6,\n      breed: 'siamese',\n      color: 'blue'\n    }\n  ]\n\n  constructor(\n    private highlightService: HighlightService\n    ) {\n  }\n\n  ngOnInit(): void {\n    const arr = [1, 2, 3, 4, 5];\n    select('.card1').selectAll('button').data(arr).enter().append('button').text(d => d);\n    const d = select('.card1').select('button').data();\n    const data = select('.card1').selectAll('button').data();\n    const nodes = select('.card1').selectAll('button').nodes();\n    console.log(d);\n    console.log(data);\n    console.log(nodes);\n\n    const kittieSelection = select(\"#kitty-svg\")\n      .selectAll('circle')\n      .data(this.kitties);\n\n    console.log(\"kittieSelection\", kittieSelection);\n\n    kittieSelection\n      .enter()\n      .append('circle')\n      .attr('fill', (kitty) => kitty.color)\n      .attr('cx', (kitty) => kitty.age * 40)\n      .attr('cy', 100)\n      .attr('r', 40);\n\n    const kittieSelection1 = select(\"#kitty-svg1\")\n      .selectAll('circle')\n      .data(this.kitties);\n\n    kittieSelection1\n      .enter()\n      .append('circle')\n      .attr('fill', (kitty) => kitty.color)\n      .attr('cx', (kitty) => kitty.age * 40)\n      .attr('cy', 100)\n      .attr('r', 40);\n\n    select('#kitty-svg1')\n      .selectAll('circle')\n      .data(this.kitties.filter((kitty) => kitty.age >= 3))\n      .exit()\n      .remove();\n  }\n\n  ngAfterViewInit(): void {\n    this.highlightService.highlightAll();\n  }\n\n  ngOnDestroy(): void {\n  }\n\n}\n","<div class=\"grid-container\" id=\"grid\">\n  <mat-grid-list cols=\"3\" rowHeight=\"400px\">\n    <mat-grid-tile colspan=\"1\" rowspan=\"2\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n             Selections and Binding\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n          <pre>\n<code class=\"language-js\">const arr = [1, 2, 3, 4, 5];\nselect('.card1')\n  .selectAll('button')\n  .data(arr)\n  .enter()\n  .append('button')\n  .text(d => d);\n\n//.join('circle') new syntax\n// for .enter().append()\n</code></pre>\n\n          <div class=\"card1\"></div>\n<pre>\n<code class=\"language-js\">select('.card1')\n  .select('button')\n  .data();// [1]\n\nselect('.card1')\n  .selectAll('button')\n  .data();//[1,2,3,4,5]\n\nselect('.card1')\n  .selectAll('button')\n  .nodes();//[button, button, ..., button]\n</code></pre>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile colspan=\"1\" rowspan=\"2\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            Binding data to elements (New data enters)\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n          <pre>\n<code class=\"language-js\">const kitties = [\n  {{ '{' }} name: 'Mittens', age: 1, color: 'gray', {{ '}' }},\n  {{ '{' }} name: 'Fluffy', age: 3, color: 'orange' {{ '}' }},\n  {{ '{' }} name: 'Spike', age: 5, color: 'black' {{ '}' }}\n  {{ '{' }} name: 'Bob', age: 6, color: 'blue' {{ '}' }}\n];\n</code></pre>\n\n<pre><code class=\"language-js\">const kittieSelection = select(\"#kitty-svg\")\n    .selectAll('circle')\n    // bind data to shapes, key by name\n    .data(this.kitties, (d) => d.name);\n</code></pre>\n<pre><code class=\"language-js\">kittieSelection\n    .enter() // add new elements\n    .append('circle')\n    .attr('fill', (kitty) => kitty.color)\n    .attr('cx', (kitty) => kitty.age * 25)\n    .attr('cy', 30)\n    .attr('r', 40);\n      </code></pre>\n          <svg width=\"400\" height=\"300\" id=\"kitty-svg\" xmlns=\"http://www.w3.org/2000/svg\">\n          </svg>\n          <!-- <button mat-raised-button (click)=\"changeTileColor()\">Run</button> -->\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n\n    <mat-grid-tile colspan=\"1\" rowspan=\"2\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            Remove bound data (Bound data exits)\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n          <pre>\n<code class=\"language-js\">const kitties = [\n  {{ '{' }} name: 'Mittens', age: 1, color: 'gray', {{ '}' }},\n  {{ '{' }} name: 'Fluffy', age: 3, color: 'orange' {{ '}' }},\n  {{ '{' }} name: 'Spike', age: 5, color: 'black' {{ '}' }}\n  {{ '{' }} name: 'Bob', age: 6, color: 'blue' {{ '}' }}\n];\n</code></pre>\n\n<pre><code class=\"language-js\">const kittieSelection = select(\"#kitty-svg\")\n    .selectAll('circle')\n    .data(this.kitties.filter((kitty) => {{'{'}}\n      return kitty.age >= 3;\n    {{'}'}}));\n</code></pre>\n<pre><code class=\"language-js\">kittieSelection\n    .exit()\n    .remove();\n      </code></pre>\n          <svg width=\"400\" height=\"300\" id=\"kitty-svg1\" xmlns=\"http://www.w3.org/2000/svg\">\n          </svg>\n          <!-- <button mat-raised-button (click)=\"changeTileColor()\">Run</button> -->\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n  </mat-grid-list>\n</div>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { scaleOrdinal, scaleLinear, scaleTime } from 'd3-scale';\nimport { select, selectAll } from 'd3-selection';\nimport { HighlightService } from '../highlight.service';\n\n@Component({\n  selector: 'app-d3-scales',\n  templateUrl: './d3-scales.component.html',\n  styleUrls: ['./d3-scales.component.scss'],\n})\nexport class D3ScalesComponent implements OnInit {\n\n  constructor(private highlightService: HighlightService) { }\n\n  ngOnInit(): void {\n    const names = ['bob', 'tara', 'tim', 'sue', 'chip'];\n    const scaleNames = scaleOrdinal()\n      .domain(names)\n      .range(['red', 'green', 'blue', 'orange', 'purple']);\n\n    const scale = scaleOrdinal()\n      .domain(names)\n      .range(['red', 'green']);\n\n      console.log(scale('bob'));\n\n    select(\".scale-ordinal\")\n      .selectAll('div')\n      .data(names)\n      .enter()\n      .append('div')\n      .style('background-color', (d) => scaleNames(d))\n      .text((d) => d)\n      .style('color', 'white')\n      .style('margin', '2px');\n\n    const linear = scaleLinear()\n        .domain([0, 1000])\n        .range([0, 500]);\n\n    console.log(linear(0)); // -> 0\n    console.log(linear(500)); // -> 250\n    console.log(linear(1000)); // -> 500\n    console.log(linear.invert(500)); // -> 1000\n\n    select('#linear-x')\n      .selectAll('rect')\n      .data([80,150,300,400,430])\n      .enter()\n      .append('rect')\n      .attr('x', (d) => linear(d))\n\n    select('#linear-y')\n      .selectAll('rect')\n      .data([30,50,100,140,180])\n      .enter()\n      .append('rect')\n      .attr('y', (d) => linear(d))\n      .attr('x', (d) => linear(d))\n\n    // console.log(linear(-0.5)); // \"rgb(255, 128, 128)\"\n    // console.log(linear(+0.5)); // \"rgb(128, 192, 128)\"\n    // console.log(linear(1)); // \"rgb(128, 192, 128)\"\n\n    const dates = [new Date(2022, 0, 1), new Date(2022, 0, 2)];\n    const timeScale = scaleTime()\n      .domain(dates)\n      .range([0, 500]);\n\n    timeScale(new Date(2022, 0, 1)); // 0\n    timeScale(new Date(2022, 0, 1, 12)); // 250\n    timeScale(new Date(2022, 0, 2)); // 500\n    timeScale.invert(0); // Sat Jan 01 2022 00:00:00 GMT-0000 (GMT)\n    timeScale.invert(250); // Sat Jan 01 2022 12:00:00 GMT-0000 (GMT)\n    timeScale.invert(500); // Sat Jan 02 2022 00:00:00 GMT-0000 (GMT)\n\n    select('#time-x')\n      .selectAll('circle')\n      .data([new Date(2022, 0, 1, 2), new Date(2022, 0, 1, 5), new Date(2022, 0, 1, 10)])\n      .enter()\n      .append('circle')\n      .attr('r', 20)\n      .attr('cy', 50)\n      .attr('cx', (d) => timeScale(d));\n\n// console.log(timeScale(new Date(2000, 0, 1,  5))); // 200\n// console.log(timeScale(new Date(2000, 0, 1, 16))); // 640\n// console.log(timeScale.invert(200)); // Sat Jan 01 2000 05:00:00 GMT-0800 (PST)\n// console.log(timeScale.invert(640)); // Sat Jan 01 2000 16:00:00 GMT-0800 (PST)\n\n    // const color = scaleOrdinal()\n    //     .domain([\"tom\", \"dick\", \"harry\"])\n    //     .range([\"red\", \"white\", \"green\"]);\n\n    // console.log(color(\"tom\")); // \"rgb(255, 128, 128)\"\n    // console.log(color.range()); // \"rgb(128, 192, 128)\"\n    // console.log(color.domain()); // \"rgb(128, 192, 128)\"\n    // console.log(color.domain(\"tom\")()); // \"rgb(128, 192, 128)\"\n    // console.log(color.domain(\"dick\")()); // \"rgb(128, 192, 128)\"\n    // console.log(color.domain(\"harry\")()); // \"rgb(128, 192, 128)\"\n  }\n\n  ngAfterViewInit(): void {\n    this.highlightService.highlightAll();\n  }\n}\n\n","<div class=\"grid-container\" id=\"grid\">\n  <mat-grid-list cols=\"3\" rowHeight=\"450px\">\n    <mat-grid-tile colspan=\"1\" rowspan=\"2\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            Scale Linear\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n          <pre>\n<code class=\"language-js\"> const linear = scaleLinear()\n        .domain([0, 1000])\n        .range([0, 500]);\n\n    linear(0); // -> 0\n    linear(500); // -> 250\n    linear(1000); // -> 500\n    linear.invert(500); // -> 1000\n</code></pre>\n\n          <pre>\n<code class=\"language-js\">select('#linear-x')\n      .selectAll('rect')\n      .data([100,150,300,400,430])\n      .enter()\n      .append('rect')\n      .attr('x', (d) => linear(d))\n</code></pre>\n\n          <svg width=\"500\" height=\"40\" id=\"linear-x\"></svg>\n\n          <pre>\n<code class=\"language-js\">select('#linear-y')\n      .selectAll('rect')\n      .data([30,50,100,140,180])\n      .enter().append('rect')\n      .attr('y', (d) => linear(d))\n      .attr('x', (d) => linear(d))\n</code></pre>\n\n          <svg width=\"500\" id=\"linear-y\"></svg>\n\n        </mat-card-content>\n        <mat-card-content class=\"dashboard-card-content\">\n          <div class=\"scale-linear\"></div>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile colspan=\"1\" rowspan=\"2\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            Scale Ordinal\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n          <pre>\n<code class=\"language-js\">const names = ['bob', 'tara', 'tim', 'sue', 'chip'];\nconst scaleNames = scaleOrdinal()\n  .domain(names)\n  .range(['red', 'green', 'blue', 'orange', 'purple']);\n\nconst scale = scaleOrdinal()\n  .domain(names)\n  .range(['red', 'green']);\n</code></pre>\n          <pre>\n<code class=\"language-js\">select(\".scale-ordinal\")\n      .selectAll('div')\n      .data(names).enter()\n      .append('div')\n      .style('background-color', (d) => scaleNames(d))\n      .text((d) => d)\n      .style('color', 'white')\n      .style('margin', '2px');\n</code></pre>\n          <div class=\"scale-ordinal\"></div>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n\n    <mat-grid-tile colspan=\"1\" rowspan=\"2\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            Scale Time\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n          <pre>\n<code class=\"language-js\">const dates = [new Date(2022, 0, 1), new Date(2022, 0, 2)];\nconst timeScale = scaleTime()\n  .domain(dates)\n  .range([0, 500]);\n\ntimeScale(new Date(2022, 0, 1)); // 0\ntimeScale(new Date(2022, 0, 1, 12)); // 250\ntimeScale(new Date(2022, 0, 2)); // 500\ntimeScale.invert(0); // Sat Jan 01 2022 00:00:00 GMT-0000 (GMT)\ntimeScale.invert(250); // Sat Jan 01 2022 12:00:00 GMT-0000 (GMT)\ntimeScale.invert(500); // Sat Jan 02 2022 00:00:00 GMT-0000 (GMT)\n</code></pre>\n\n          <pre>\n<code class=\"language-js\">select('#time-x')\n.selectAll('circle')\n.data([\n  new Date(2022, 0, 1, 2),\n  new Date(2022, 0, 1, 5),\n  new Date(2022, 0, 1, 10)\n])\n.enter()\n.append('circle')\n.attr('r', 20)\n.attr('cy', 50)\n.attr('cx', (d) => timeScale(d));\n</code> </pre>\n\n          <svg width=\"500\" height=\"140\" id=\"time-x\"></svg>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n  </mat-grid-list>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { selectAll, select } from 'd3-selection';\n\n@Component({\n  selector: 'app-d3-selecting',\n  templateUrl: './d3-selecting.component.html',\n  styleUrls: ['./d3-selecting.component.scss']\n})\nexport class D3SelectingComponent implements OnInit {\n\n  performanceTime: number;\n  colors = [\"#6e40aa\",\"#6054c8\",\"#4c6edb\",\"#368ce1\",\"#23abd8\",\"#1ac7c2\",\"#1ddfa3\",\"#30ef82\",\"#52f667\",\"#7ff658\",\"#aff05b\"];\n  count = 0;\n  constructor() { }\n\n  ngOnInit(): void {\n    // fix prism display issue by reloading!!\n    if (!localStorage.getItem('reload')) {\n        localStorage.setItem('reload', 'no reload')\n        location.reload()\n      } else {\n        localStorage.removeItem('reload')\n      }\n  }\n\n  changeTileColor() {\n    if (this.count > 10) this.count = 0;\n    selectAll('mat-grid-tile').style('background-color', this.colors[this.count]);\n    this.count++\n  }\n\n  translateRectX() {\n    select('rect').attr(\"transform\", \"translate(15, 0)\");\n  }\n  translateRectY() {\n    select('rect').attr(\"transform\", \"translate(15, 15)\");\n  }\n\n  scaleRect() {\n    select('rect').attr(\"transform\", \"scale(.9)\");\n  }\n\n  skewRect() {\n    select('rect').attr(\"transform\", \"skewY(10)\");\n  }\n\n  rotateRect() {\n    select('rect').attr(\"transform\", \"rotate(5)\");\n  }\n\n  changeColor() {\n    this.count > 10 ? this.count = 0 : this.count++;\n    const sel = selectAll('g > rect').filter(function() {\n      const rects = selectAll('g > rect');\n      // console.log(\"selectAll('g > rect')\", rects);\n      return !select(this).node().getAttribute('style').includes('green');\n    });\n    console.log(sel);\n    console.log(sel.nodes());\n    sel.style('fill', () => this.colors[this.count]);\n  }\n\n  randomNumber(min, max) {\n    return Math.random() * (max - min) + min;\n  }\n}\n","<div class=\"grid-container\" id=\"grid\">\n  <mat-grid-list cols=\"3\" rowHeight=\"400px\">\n    <mat-grid-tile colspan=\"1\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            d3 Selecting\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n          <pre>\n<code class=\"language-js\">\n  d3.select('#grid')\n    .selectAll('mat-grid-tile')\n    .style('background-color', this.colors[this.count]);\n</code>\n          </pre>\n          <button mat-raised-button (click)=\"changeTileColor()\">Run</button>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile colspan=\"2\">\n    <!-- <mat-grid-tile [colspan]=\"1\" [rowspan]=\"2\"> -->\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            SVG transforms\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n<pre>\n<code class=\"language-js\">  d3.selectAll('rect').attr(\"transform\", \"translate(15, 0)\");// translate x\n  d3.selectAll('rect').attr(\"transform\", \"translate(15, 15)\");// translate y\n  d3.selectAll('rect').attr(\"transform\", \"scale(.9)\");// scale\n  d3.selectAll('rect').attr(\"transform\", \"rotate(5)\");// rotate\n  d3.selectAll('rect').attr(\"transform\", \"skewY(10)\");// skewY (also skewX) </code>\n</pre>\n          <svg width=\"600\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\">\n              <rect x=\"100\" y=\"20\" width=\"50\" height=\"50\" style=\"fill:red; stroke-width:3; stroke:rgb(0,0,0)\" />\n          </svg>\n          <div style=\"display: flex; flex-flow: row nowrap;\">\n            <button mat-raised-button (click)=\"translateRectX()\">Translate X</button>\n            <button mat-raised-button (click)=\"translateRectY()\">Translate Y</button>\n            <button mat-raised-button (click)=\"scaleRect()\">Scale</button>\n            <button mat-raised-button (click)=\"rotateRect()\">Rotate</button>\n            <button mat-raised-button (click)=\"skewRect()\">Skew</button>\n          </div>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n\n    <mat-grid-tile [colspan]=\"2\" [rowspan]=\"1\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            d3 Filtering\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n<pre>\n<code class=\"language-js\">const selection = d3.selectAll('g > rect').filter(() => {{ '{' }}\n  return !select(this)\n    .node()\n    .getAttribute('style')\n    .includes('green');\n{{ '}' }});\nselection.style('fill', () => this.colors[this.count]);\n</code></pre>\n          <svg width=\"600\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\">\n            <g>\n              <rect x=\"0\" y=\"20\" width=\"50\" height=\"50\" style=\"fill:blue; stroke-width:3; stroke:rgb(0,0,0)\" />\n              <rect x=\"60\" y=\"20\" width=\"50\" height=\"50\" style=\"fill:green; stroke-width:3; stroke:rgb(0,0,0)\" />\n              <rect x=\"120\" y=\"20\" width=\"50\" height=\"50\" style=\"fill:green; stroke-width:3; stroke:rgb(0,0,0)\" />\n              <rect x=\"180\" y=\"20\" width=\"50\" height=\"50\" style=\"fill:blue; stroke-width:3; stroke:rgb(0,0,0)\" />\n            </g>\n          </svg>\n          <button mat-raised-button (click)=\"changeColor()\">Change Blue</button>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n      <!-- <img style=\"position: absolute; bottom: 150px;\" -->\n      <mat-card class=\"dashboard-card\">\n        <mat-card-content>\n          <img style=\"\" src=\"./../../assets/images/d3_selection.png\"/>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n  </mat-grid-list>\n</div>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { HighlightService } from '../highlight.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DashboardComponent {\n  // /** Based on the screen size, switch from standard to one column per row */\n  // cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n  //   map(({ matches }) => {\n  //     if (matches) {\n  //       return [\n  //         { title: 'Social', cols: 1, rows: 1 },\n  //         { title: 'Card 2', cols: 1, rows: 1 },\n  //         { title: 'Card 3', cols: 1, rows: 1 },\n  //         { title: 'Card 4', cols: 1, rows: 1 }\n  //       ];\n  //     }\n\n  //     return [\n  //       { title: 'Social', cols: 2, rows: 1 },\n  //       { title: 'Card 2', cols: 1, rows: 1 },\n  //       { title: 'Card 3', cols: 1, rows: 2 },\n  //       { title: 'Card 4', cols: 1, rows: 1 }\n  //     ];\n  //   })\n  // );\n\n  type: string\n\n  constructor(private highlightService: HighlightService) {}\n\n  ngAfterViewInit() {\n    this.highlightService.highlightAll();\n  }\n\n  expand(type: string) {\n    if (this.type === type) {\n      this.type = undefined;\n    } else {\n      this.type = type;\n    }\n  }\n}\n","<div class=\"grid-container\">\n  <mat-grid-list cols=\"3\" rowHeight=\"390px\">\n    <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-content>\n          <mat-card-header>\n            <mat-card-title>\n              My Background 🧝‍♂️\n            </mat-card-title>\n          </mat-card-header>\n          <p>Senior Frontend Engineer</p>\n          <p>Angular / Web enthusiast</p>\n          <p>Developing realtime analytics applications</p>\n          <p>How I got into d3?</p>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-content>\n          <mat-card-header>\n            <mat-card-title>\n              Data Driven Documents (d3)\n            </mat-card-title>\n          </mat-card-header>\n            <p>\n              D3.js is a JavaScript library for manipulating documents based on data. D3 helps you bring data to life using HTML, SVG, and CSS. D3’s emphasis on web standards gives you the full capabilities of modern browsers without tying yourself to a proprietary framework, combining powerful visualization components and a data-driven approach to DOM manipulation.\n            </p>\n            <p>\n              d3 is a large library.  It provides micro libraries that provide specific functionality allowing users to only import the parts of d3 they need.\n            </p>\n            <p>\n              Data visualization with d3, visual storytelling, charts, info graphics, trees, maps (geojson), etc\n            </p>\n            <ul>\n              <li>d3-selection</li>\n              <li>d3-array</li>\n              <li>d3-fetch</li>\n              <li>d3-dispatch</li>\n            </ul>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n      <mat-card class=\"dashboard-card\">\n          <mat-card-header>\n            <mat-card-title>\n              Scalable Vector Graphics (SVG)\n            </mat-card-title>\n          </mat-card-header>\n        <mat-card-content>\n            <p>\n              Scalable Vector Graphics (SVG) is an XML-based vector image format for two-dimensional graphics with support for interactivity and animation.\n            </p>\n            <p>\n              SVG images are defined in a vector graphics format and stored in XML text files.\n            </p>\n            <pre><code class=\"language-markup\">\n  &lt;svg>\n    &lt;g>\n      &lt;circle cx=\"100\" cy=\"100\" r=\"10\" />\n      &lt;rect rx=\"100\" ry=\"100\" />\n    &lt;/g>\n  &lt;/svg>\n            </code></pre>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile [colspan]=\"3\" [rowspan]=\"2\">\n      <img style=\"position: absolute; bottom: 350px;\"\n        width=\"700px\"\n        height=\"400px\"\n        src=\"http://visage.co/wp-content/uploads/2015/03/DataQuote2.png\"/>\n    </mat-grid-tile>\n  </mat-grid-list>\n</div>\n","import { Injectable } from '@angular/core';\n\nimport 'prismjs';\n// import 'prismjs/plugins/toolbar/prism-toolbar';\n// import 'prismjs/plugins/copy-to-clipboard/prism-copy-to-clipboard';\n// import 'prismjs/components/prism-css';\n// import 'prismjs/components/prism-javascript';\n// import 'prismjs/components/prism-typescript';\n// import 'prismjs/components/prism-scss';\n\ndeclare var Prism: any;\n\n@Injectable({providedIn: 'root'})\nexport class HighlightService {\n    constructor() { }\n\n    highlightAll() {\n        Prism.highlightAll();\n    }\n}\n","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss']\n})\nexport class NavigationComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n      [opened]=\"(isHandset$ | async) === false\">\n    <mat-toolbar class=\"heading\">\n      Agenda 🎬\n    </mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item [routerLink]=\"'dashboard'\" [routerLinkActive]=\"['active']\">Intro</a>\n      <a mat-list-item [routerLink]=\"'svg-shapes'\" [routerLinkActive]=\"['active']\">SVG Shapes</a>\n      <a mat-list-item [routerLink]=\"'d3-selecting'\" [routerLinkActive]=\"['active']\">d3 Selecting</a>\n      <a mat-list-item [routerLink]=\"'d3-data-binding'\" [routerLinkActive]=\"['active']\">d3 Data Binding</a>\n      <a mat-list-item [routerLink]=\"'d3-scales'\" [routerLinkActive]=\"['active']\">d3 Scales</a>\n      <a mat-list-item [routerLink]=\"'d3-axis'\" [routerLinkActive]=\"['active']\">d3 Axis</a>\n      <a mat-list-item [routerLink]=\"'d3-bar-chart'\" [routerLinkActive]=\"['active']\">d3 Bar Chart</a>\n      <a mat-list-item [routerLink]=\"'d3-bar-chart-controls'\" [routerLinkActive]=\"['active']\">d3 Bar Chart Controls</a>\n      <a mat-list-item [routerLink]=\"'resources'\" [routerLinkActive]=\"['active']\">Resources</a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"isHandset$ | async\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <div class=\"spacer\">\n        <span>Introduction to d3</span>\n        <span>@tomeustace</span>\n      </div>\n    </mat-toolbar>\n\n    <router-outlet></router-outlet>\n\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Injectable } from '@angular/core';\n\nconst allTypes = [\n    \"element\",\n    \"event\",\n    \"first-input\",\n    \"largest-contentful-paint\",\n    \"layout-shift\",\n    \"longtask\",\n    \"mark\",\n    \"measure\",\n    \"navigation\",\n    \"paint\",\n    \"resource\"\n]\n\n@Injectable({providedIn: 'root'})\nexport class PerformanceService {\n  performanceObserver: PerformanceObserver;\n  className: string;\n\n  observerCallback = list => {\n          list.getEntries().forEach(entry => {\n            if (entry.entryType === \"measure\") {\n              console.log(`\n                ${this.className} - %c${entry.entryType}: %c${entry.name}, %cStart: ${entry.startTime}, Duration: ${entry.duration}`,\n                'color: green', 'color: purple', 'color: blue'\n              );\n            } else {\n              console.log(`\n                ${this.className} - %c${entry.entryType}: %c${entry.name}`,\n                'color: green', 'color: purple'\n              );\n            }\n\n          });\n        };\n\n  startPerformanceObserver(className: string, entryTypes?: string[]) {\n    console.log(`${className} PerformanceObserver Started`);\n    this.className = className;\n    if(PerformanceObserver) {\n        this.performanceObserver = new PerformanceObserver(this.observerCallback);\n        const types = entryTypes ?? allTypes;\n        this.performanceObserver.observe({ entryTypes: types });\n    }\n  }\n\n  stopPerformanceObserver() {\n    console.log(`${this.className} PerformanceObserver Started`);\n    this.performanceObserver.disconnect();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-resources',\n  templateUrl: './resources.component.html',\n  styleUrls: ['./resources.component.scss']\n})\nexport class ResourcesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"grid-container\">\n  <mat-grid-list cols=\"3\" rowHeight=\"390px\">\n    <mat-grid-tile [colspan]=\"3\" [rowspan]=\"1\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            Resources 💰\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <a href=\"https://github.com/d3/d3\">https://github.com/d3/d3</a>\n          <a href=\"https://subscription.packtpub.com/book/web_development/9781838645571/1/ch01lvl1sec04/modules-microlibraries\">https://subscription.packtpub.com/book/web_development/9781838645571/1/ch01lvl1sec04/modules-microlibraries</a>\n          <a href=\"https://marmelab.com/EventDrops/\">https://marmelab.com/EventDrops/</a>\n          <a href=\"https://bost.ocks.org/mike/selection/\">https://bost.ocks.org/mike/selection/</a>\n          <a href=\"https://observablehq.com/\">https://observablehq.com/</a>\n          <a href=\"https://bl.ocks.org/\">https://bl.ocks.org/</a>\n          <a href=\"https://coggle.it/diagram/YNyRpEGjTcXVJBsW/t/angular\">https://coggle.it/diagram/YNyRpEGjTcXVJBsW/t/angular</a>\n          <a href=\"https://www.visualcinnamon.com/\">https://www.visualcinnamon.com/</a>\n          <a href=\"https://www.sarasoueidan.com/tags/svg/\">https://www.sarasoueidan.com/tags/svg/</a>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile [colspan]=\"3\" [rowspan]=\"1\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            Books 📚\n            <a href=\"https://www.manning.com/books/d3-js-in-action\">https://www.manning.com/books/d3-js-in-action</a>\n            <a href=\"https://www.oreilly.com/library/view/svg-animations/9781491939697/\">https://www.oreilly.com/library/view/svg-animations/9781491939697/</a>\n            <a href=\"https://www.edwardtufte.com/tufte/books_vdqi\">https://www.edwardtufte.com/tufte/books_vdqi</a>\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n  </mat-grid-list>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HighlightService } from '../highlight.service';\nimport { PerformanceService } from '../performance.service';\nimport { select, selectAll } from 'd3-selection';\n\n@Component({\n  selector: 'app-svg-shapes',\n  templateUrl: './svg-shapes.component.html',\n  styleUrls: ['./svg-shapes.component.scss']\n})\nexport class SvgShapesComponent {\n\n  constructor(private highlightService: HighlightService) { }\n\n  ngOnInit() {\n    const rect = select('rect');\n    const rects = selectAll('rect');\n    console.log(rect);\n    console.log(rects);\n  }\n\n  ngAfterViewInit() {\n    this.highlightService.highlightAll();\n  }\n\n  ngOnDestroy() { }\n\n}\n","<div class=\"grid-container\">\n  <mat-grid-list cols=\"4\" rowHeight=\"350px\">\n    <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            <h2>SVG Shapes</h2>\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <div class=\"shapes\">\n            <ul>\n              <li> rect </li>\n              <li> circle </li>\n              <li> ellipse </li>\n              <li> path </li>\n              <li> polygon </li>\n              <li> polygonline </li>\n              <li> line </li>\n            </ul>\n            <svg width=\"500\" height=\"550\" transform=\"scale(.6), translate(-120, -200)\" xmlns=\"http://www.w3.org/2000/svg\">\n                <line x1=\"30\" y1=\"30\" x2=\"350\" y2=\"290\" style=\"stroke:rgb(255,0,0); stroke-width:3\" />\n                <line x1=\"30\" y1=\"50\" x2=\"300\" y2=\"350\" style=\"stroke:grey; stroke-width:5\" />\n                <rect x=\"60\" y=\"100\" width=\"70\" height=\"40\" rx=\"10\" ry=\"10\" style=\"fill:#778899; stroke:#FF4500; stroke- width:5; fill-opacity:0.7; stroke-opacity:0.6\" />\n                <polygon points=\"160,10 350,140 210,350 50,199\" style=\"fill:orange; stroke:purple; stroke-width:1; fill-opacity:1\" />\n                <rect x=\"120\" y=\"150\" width=\"90\" height=\"90\" style=\"fill:grey; stroke-width:3; stroke:rgb(0,0,0)\" />\n                <circle cx=\"250\" cy=\"100\" r=\"60\" stroke=\"black\" stroke-width=\"3\" fill=\"red\" fill-opacity=\"0.7\" />\n                <ellipse cx=\"140\" cy=\"310\" rx=\"90\" ry=\"20\" style=\"fill:OrangeRed\" />\n                <ellipse cx=\"120\" cy=\"280\" rx=\"110\" ry=\"20\" style=\"fill:grey; fill-opacity:0.5\" />\n                <polyline points=\"220,200 240,180 260,200 280,180 300,200 320,180 340,200\" style=\"fill:none; stroke:red; stroke-width:6\" />\n                <line x1=\"20\" y1=\"80\" x2=\"100\" y2=\"200\" style=\"stroke:orangered; stroke-width:8\" />\n                <polyline points=\"280,290 300,220 320,290\" style=\"fill:grey; stroke:grey; stroke-width:2; fill-opacity:0.5\" />\n            </svg>\n          </div>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            Rectangle Attributes\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <div class=\"shapes\">\n            <ul>\n              <li> x </li>\n              <li> y </li>\n              <li> rx </li>\n              <li> ry </li>\n              <li> width</li>\n              <li> height </li>\n              <li> pathLength</li>\n            </ul>\n            <svg width=\"500\" height=\"550\" transform=\"scale(.6), translate(0, -200)\" xmlns=\"http://www.w3.org/2000/svg\">\n                <rect x=\"0\" y=\"50\" width=\"50\" height=\"50\" style=\"fill:red; stroke-width:3; stroke:rgb(0,0,0)\" />\n                <rect x=\"40\" y=\"150\" width=\"60\" height=\"70\" style=\"fill:gold; stroke-width:3; stroke:rgb(0,0,0)\" />\n                <rect x=\"80\" y=\"250\" rx=\"20\" width=\"120\" height=\"90\" style=\"fill:green; stroke-width:3; stroke:rgb(0,0,0)\" />\n            </svg>\n          </div>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            Circle Attributes\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <div class=\"shapes\">\n            <ul>\n              <li> cx </li>\n              <li> cy </li>\n              <li> r </li>\n              <li> pathLength</li>\n            </ul>\n            <svg width=\"500\" height=\"550\" transform=\"scale(.6), translate(0, -200)\" xmlns=\"http://www.w3.org/2000/svg\">\n                <circle cx=\"70\" cy=\"100\" r=\"60\" stroke=\"black\" stroke-width=\"3\" fill=\"blue\" />\n                <circle cx=\"70\" cy=\"100\" r=\"40\" stroke=\"black\" stroke-width=\"3\" fill=\"green\" />\n                <circle cx=\"70\" cy=\"100\" r=\"20\" stroke=\"black\" stroke-width=\"3\" fill=\"red\" />\n\n                <circle cx=\"70\" cy=\"220\" r=\"20\" stroke=\"black\" stroke-width=\"3\" fill=\"red\" />\n                <circle cx=\"100\" cy=\"220\" r=\"18\" stroke=\"black\" stroke-width=\"3\" fill=\"red\" />\n                <circle cx=\"130\" cy=\"220\" r=\"16\" stroke=\"black\" stroke-width=\"3\" fill=\"red\" />\n                <circle cx=\"155\" cy=\"220\" r=\"14\" stroke=\"black\" stroke-width=\"3\" fill=\"red\" />\n\n                <circle cx=\"20\" cy=\"320\" r=\"20\" stroke=\"black\" fill=\"yellow\" />\n                <circle cx=\"40\" cy=\"320\" r=\"18\" stroke=\"black\" fill=\"yellow\" />\n                <circle cx=\"60\" cy=\"320\" r=\"16\" stroke=\"black\" fill=\"yellow\" />\n                <circle cx=\"80\" cy=\"320\" r=\"14\" stroke=\"black\" fill=\"yellow\" />\n            </svg>\n          </div>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            Ellipse Attributes\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <div class=\"shapes\">\n            <ul>\n              <li> cx </li>\n              <li> cy </li>\n              <li> rx </li>\n              <li> ry </li>\n              <li> pathLength</li>\n            </ul>\n            <svg width=\"500\" height=\"550\" transform=\"scale(.6), translate(0, -200)\" xmlns=\"http://www.w3.org/2000/svg\">\n                <ellipse cx=\"40\" cy=\"50\" rx=\"40\" ry=\"50\" style=\"fill:OrangeRed\" />\n                <ellipse cx=\"90\" cy=\"150\" rx=\"90\" ry=\"50\" style=\"fill:green\" />\n                <ellipse cx=\"120\" cy=\"220\" rx=\"110\" ry=\"20\" style=\"fill:grey; fill-opacity:0.5\" />\n                <ellipse cx=\"120\" cy=\"250\" rx=\"90\" ry=\"20\" style=\"fill:Orange\" />\n                <ellipse cx=\"120\" cy=\"290\" rx=\"110\" ry=\"20\" style=\"fill:grey; fill-opacity:0.5\" />\n            </svg>\n          </div>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            Polygon  Attributes(Closed Shapes)\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <div class=\"shapes\">\n            <ul>\n              <li> points </li>\n              <li> pathLength</li>\n            </ul>\n            <svg width=\"500\" height=\"550\" transform=\"scale(.6), translate(0, -200)\" xmlns=\"http://www.w3.org/2000/svg\">\n              <polygon points=\"10,10 250,40 210,450 50,300\" style=\"fill:orange; stroke:purple; stroke-width:1; fill-opacity:1\" />\n              <polygon points=\"0,100 50,25 50,75 100,0\" />\n              <polygon points=\"0,100 50,25 50,75 100,0\" />\n            </svg>\n          </div>\n        </mat-card-content>\n        </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            Polyline  Attributes(Open Shapes)\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <div class=\"shapes\">\n            <ul>\n              <li> points </li>\n              <li> pathLength</li>\n            </ul>\n            <svg width=\"500\" height=\"550\" transform=\"scale(.6), translate(0, -200)\" xmlns=\"http://www.w3.org/2000/svg\">\n              <polyline points=\"20,200 40,180 60,200 80,180 100,200 120,180 140,200\" style=\"fill:none; stroke:red; stroke-width:6\" />\n              <polyline points=\"80,290 200,220 220,290\" style=\"fill:grey; stroke:grey; stroke-width:2; fill-opacity:0.5\" />\n            </svg>\n            </div>\n        </mat-card-content>\n        </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            Path Attributes\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <div class=\"shapes\">\n            <ul>\n              <li> d (attribute) </li>\n              <ol>\n              <li><b>MoveTo:</b> M, m</li>\n              <li><b>LineTo:</b> L, l, H, h, V, v</li>\n              <li><b>Cubic Bézier Curve:</b> C, c, S, s</li>\n              <li><b>Quadratic Bézier Curve:</b> Q, q, T, t</li>\n              <li><b>lliptical Arc Curve:</b> A, a</li>\n              <li><b>ClosePath:</b> Z, z</li>\n              </ol>\n              <li> pathLength</li>\n            </ul>\n            <svg width=\"400\" height=\"550\" transform=\"scale(.6), translate(0, -200)\" xmlns=\"http://www.w3.org/2000/svg\">\n\n              <path d=\"M140 0 L75 140 L185 200 Z\" fill=\"green\" />\n              <path transform=\"translate(0, 220)\" d=\"M 10,30\n                        A 20,20 0,0,1 50,30\n                        A 20,20 0,0,1 90,30\n                        Q 90,60 50,90\n                        Q 10,60 10,30 z\" fill=\"red\"/>\n            </svg>\n            </div>\n        </mat-card-content>\n        </mat-card>\n    </mat-grid-tile>\n    <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            Line\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n          <div class=\"shapes\">\n            <ul>\n              <li> x1 </li>\n              <li> x2 </li>\n              <li> y1 </li>\n              <li> y2 </li>\n              <li> pathLength</li>\n            </ul>\n            <svg width=\"500\" height=\"550\" transform=\"scale(.6), translate(0, -200)\" xmlns=\"http://www.w3.org/2000/svg\">\n                <line x1=\"10\" y1=\"80\" x2=\"250\" y2=\"90\" style=\"stroke:green; stroke-width:20\" />\n                <line x1=\"0\" y1=\"30\" x2=\"250\" y2=\"290\" style=\"stroke:rgb(255,0,0); stroke-width:3\" />\n                <line x1=\"50\" y1=\"30\" x2=\"250\" y2=\"290\" style=\"stroke:rgb(255,0,0); stroke-width:3\" />\n                <line x1=\"100\" y1=\"30\" x2=\"250\" y2=\"290\" style=\"stroke:rgb(255,0,0); stroke-width:3\" />\n              </svg>\n          </div>\n        </mat-card-content>\n        </mat-card>\n    </mat-grid-tile>\n  </mat-grid-list>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}